spring.jpa.hibernate.ddl-auto=validate

map.graphhopper.routing.url=https://graphhopper.com/api/1/route
map.graphhopper.routing.apikey=${GRAPHHOPPER_APIKEY}

map.nominatim.geocoding.urlsearch=https://nominatim.openstreetmap.org/search

map.mapbox.geocoding.urlsearch=https://api.mapbox.com/geocoding/v5/mapbox.places/{searchQuery:}.json
map.mapbox.geocoding.accesstoken=${MAPBOX_ACCESS_TOKEN}

alertnotifier.alertupdate.notificationDelaysInSeconds=10,30,60,120

logging.jsonfile.path=logs/server
logging.level.ROOT=WARN
logging.level.com.alarmcontrol=INFO
logging.level.com.alarmcontrol.server.maps.mapbox.geocoding.MapboxParser=DEBUG
logging.level.org.zalando.logbook.Logbook=TRACE

# Rules for Inbound HTTP Requests and their corresponding responses
logbook.inbound.include[0]=/graphql/**
logbook.inbound.include[1]=/api/**
logbook.inbound.includeRequestBody[0]=/api/**
logbook.outbound.includeResponseBody[0]=/api/**

# Rules for Outbound HTTP Requests and their corresponding responses
# log everything (You must add an LogbookInterceptor to the HttpClient!)
logbook.outbound.include[0]=**
logbook.outbound.includeRequestBody[0]=**
logbook.inbound.includeResponseBody[0]=**

# Http Log Format (https://github.com/zalando/logbook#formatting)
logbook.format.style=json