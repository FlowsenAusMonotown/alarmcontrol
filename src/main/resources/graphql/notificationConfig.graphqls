type NotificationOrganisationConfig {
 contacts: [Contact]
 subscriptions : [NotificationSubscription]
}

type NotificationSubscription {
  uniqueId : String
  subscriberContactUniqueIds : [String]
  notificationConfig : NotificationConfig
}

union NotificationConfig = AlertCreatedNotificationConfig

type AlertCreatedNotificationConfig {
  updateDelaysInSeconds:[Int]
}

interface Contact {
  uniqueId : String
  name : String
}

type MailContact implements Contact {
  uniqueId : String
  name : String
  mailAddress : String
}


type Aao {
 uniqueId: String
 vehicles: [String]
 locations: [String]
 keywords: [String]
}

type Vehicle {
 uniqueId: String
 name: String
}

type Location {
 uniqueId: String
 name: String
}


type AaoOrganisationConfiguration {
 aaoRules: [Aao]
 vehicles: [Vehicle]
 locations: [Location]
}



